(require "algorithm.rkt")
(eq? (make-list 4 2)  '(2 2 2 2))
(eq?(remove-all 2 '(1 2 2 3 4 5 2))  '(1 3 4 5))
(eq?(add-cdr (list '(1 2) '(1 3)) 2) '(((1 2) . 2) ((1 3) . 2)))
(eq?(remove-car (list '(1 2) '(1 3)))   '((2) (3)))
(eq?(initial-state 3)  '(1 1 1)  )
(eq?(check-move? 1 3 '(1 2 2 2 3 1))  #t)
(eq?(check-move? 3 1 '(1 2 2 2 3 1))  #f)
(eq?(move-disk 1 3 '(1 2 2 2 3 1))  '(3 2 2 2 3 1))
(eq?(move-disk 3 1 '(1 2 2 2 3 1))  '(1 2 2 2 3 1))

(eq?(event-move (list '(2 3) '(1 3)) '(1 2 2 3 2 1))  '((1 3 2 3 1 1) (3 3 2 3 1 1)))
(eq?(hunt 1 3 5)  '((1 3) (1 2) (3 2) (1 3) (2 1) (2 3) (1 3)
                     (1 2) (3 2) (3 1) (2 1) (3 2)(1 3) (1 2) (3 2)
                     (1 3) (2 1) (2 3) (1 3) (2 1) (3 2) (3 1) (2 1)
                     (2 3) (1 3) (1 2) (3 2) (1 3) (2 1) (2 3) (1 3)))
(eq?(hanoi 3) '((1 1 1) (3 1 1) (3 2 1) (2 2 1) (2 2 3) (1 2 3) (1 3 3) (3 3 3)))
(eq?(f 2 3)  '(2 1 1))
(eq?(f 40 4) '(1 2 3 2))
(eq?(get-edges (base-graph 1))'((1 3) (1 2) (2 1) (2 3) (3 1) (3 2)))
(eq?(third-term 10) 36905)
(eq?(third-term 3)  18)
(eq?(third-term-list 3)  '((5 14)))
(eq?(second-term 10) 51669)
(eq?(second-term 3)  23)
(eq?(second-term-list 3) '((9 27)))
(eq?(first-term-list 3)  '((10 19)) )                        
(eq?(finder '(1 2 3 1 2) 5)  175)
(eq?(the-next-list-move '(3 2 1 2 3 1 2 2 1) 9) '(3 1 1 2 3 1 2 2 1))
(eq?(discfinder (list '(3) '() '(1 2))) '(3 3 1))

(eq?(list-of-discs '(3 3 1)) '((3) () (1 2)))

(eq?(the-hint-giver (list '(1 2 6) '(4 ) '(5))) '((2 5) (1 3) (4)))
